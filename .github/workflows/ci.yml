################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################


# We need to specify repo related information here since Apache INFRA doesn't differentiate
# between several workflows with the same names while preparing a report for GHA usage
# https://infra-reports.apache.org/#ghactions
name: Flink Kubernetes Operator CI
on:
  push:
    branches:
      - main
      - release-*
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  test_ci:
    runs-on: ubuntu-latest
    name: maven build
    strategy:
      matrix:
        java-version: [ 11, 17, 21 ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: |
          mvn -B clean install javadoc:javadoc -Pgenerate-docs
          if [[ $(git diff HEAD | wc -l) -gt 0 ]]; then
            echo "Please generate the java doc via 'mvn clean install -DskipTests -Pgenerate-docs' again"
            exit 1
          fi
      - name: Validate helm chart linting
        run: |
          helm lint helm/flink-kubernetes-operator
      - name: Tests in flink-kubernetes-operator
        run: |
          cd flink-kubernetes-operator
          mvn -B verify -Dit.skip=false
          cd ..
      - name: Tests in flink-kubernetes-webhook
        run: |
          cd flink-kubernetes-webhook
          mvn -B verify -Dit.skip=false
          cd ..
      - name: Tests in flink-autoscaler-plugin-jdbc
        run: |
          cd flink-autoscaler-plugin-jdbc
          mvn -B verify -Dit.skip=false
          cd ..
  e2e_smoke_test:
    name: Smoke test
    strategy:
      matrix:
        http-client: [ "okhttp", "jdk", "jetty", "vertx" ]
        java-version: [ "11", "17", "21" ]
    uses: ./.github/workflows/e2e.yaml
    with:
      java-version: ${{ matrix.java-version }}
      flink-version: "v1_20"
      http-client: ${{ matrix.http-client }}
      test: test_application_operations.sh
  java_runtimes:
    name: Java runtimes smoke test
    needs: e2e_smoke_test
    strategy:
      matrix:
        http-client: [ "okhttp" ]
        java-version: [ "11", "17"]
        flink-version:
          - "v1_20"
          - "v1_19"
          - "v1_18"
    uses: ./.github/workflows/e2e.yaml
    with:
      java-version: ${{ matrix.java-version }}
      flink-version: ${{ matrix.flink-version }}
      http-client: ${{ matrix.http-client }}
      test: test_application_operations.sh
      append-java-version: true
  e2e_namespace_tests:
    name: Alternative namespace tests
    needs: e2e_smoke_test
    strategy:
      matrix:
        flink-version:
          - "v1_20"
          - "v1_19"
          - "v1_18"
          - "v1_17"
          - "v1_16"
        mode:
         - "native"
         - "standalone"
        test:
          - test_application_operations.sh
          - test_multi_sessionjob.sh
          - test_autoscaler.sh
          - test_dynamic_config.sh
        exclude:
          - mode: standalone
            test: test_autoscaler.sh
          - mode: standalone
            test: test_dynamic_config.sh
          - flink-version: v1_16
            test: test_autoscaler.sh
          - flink-version: v1_16
            test: test_dynamic_config.sh

    uses: ./.github/workflows/e2e.yaml
    with:
      java-version: 11
      flink-version: ${{ matrix.flink-version }}
      test: ${{ matrix.test }}
      namespace: "flink"
      create-namespace: true
      mode: ${{ matrix.mode }}
  e2e_ci:
    needs: e2e_smoke_test
    strategy:
      matrix:
        flink-version:
          - "v1_20"
          - "v1_18"
          - "v1_19"
          - "v1_17"
          - "v1_16"
        mode:
          - "native"
          - "standalone"
        test:
          - test_application_kubernetes_ha.sh
          - test_application_operations.sh
          - test_dynamic_config.sh
          - test_sessionjob_kubernetes_ha.sh
          - test_sessionjob_operations.sh
          - test_autoscaler.sh
          - test_flink_operator_ha.sh
          - test_snapshot.sh
        exclude:
          - flink-version: v1_16
            test: test_autoscaler.sh
          - mode: standalone
            test: test_autoscaler.sh
          - flink-version: v1_16
            test: test_dynamic_config.sh
          - flink-version: v1_16
            test: test_flink_operator_ha.sh
          - flink-version: v1_16
            test: test_snapshot.sh
          - flink-version: v1_17
            test: test_dynamic_config.sh
          - flink-version: v1_17
            test: test_flink_operator_ha.sh
          - flink-version: v1_17
            test: test_snapshot.sh
          - flink-version: v1_18
            test: test_dynamic_config.sh
          - flink-version: v1_18
            test: test_flink_operator_ha.sh
          - flink-version: v1_18
            test: test_snapshot.sh
          - flink-version: v1_19
            test: test_snapshot.sh
    uses: ./.github/workflows/e2e.yaml
    with:
      java-version: 11
      flink-version: ${{ matrix.flink-version }}
      test: ${{ matrix.test }}
      mode: ${{ matrix.mode }}
