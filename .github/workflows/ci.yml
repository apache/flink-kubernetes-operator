################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

name: CI
on:
  push:
  pull_request:
jobs:
  test_ci:
    runs-on: ubuntu-latest
    name: test_ci
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: |
          set -o pipefail; mvn clean install javadoc:javadoc -Pgenerate-docs | tee ./mvn.log; set +o pipefail
          if [[ $(cat ./mvn.log | grep -E -v '(flink-runtime-.*.jar, flink-kubernetes-operator-.*.jar)|(flink-kubernetes-operator-.*.jar, flink-runtime-.*.jar) define 2 overlapping classes' | grep -c "overlapping classes" -) -gt 0 ]];then
            echo "Found overlapping classes: "
            cat ./mvn.log | grep "overlapping classes"
            exit 1
          fi
          if [[ $(git diff HEAD | wc -l) -gt 0 ]];then
            echo "Please generate the java doc via 'mvn clean install -DskipTests -Pgenerate-docs' again"
            exit 1
          fi
      - name: Validate helm chart linting
        run: |
          helm lint helm/flink-kubernetes-operator
      - name: Start minikube
        run: |
          source e2e-tests/utils.sh
          start_minikube
      - name: Install cert-manager
        run: |
          source e2e-tests/utils.sh
          install_cert_manager
      - name: Build image
        run: |
          export SHELL=/bin/bash
          export DOCKER_BUILDKIT=1
          eval $(minikube -p minikube docker-env)
          docker build --progress=plain  --build-arg SKIP_TESTS=false --build-arg SKIP_OS_UPDATE=false --no-cache -f ./Dockerfile -t flink-kubernetes-operator:ci-latest .
          docker images
      - name: Start the operator
        run: |
          helm --debug install flink-kubernetes-operator helm/flink-kubernetes-operator --set image.repository=flink-kubernetes-operator --set image.tag=ci-latest
          kubectl wait --for=condition=Available --timeout=120s deploy/flink-kubernetes-operator
          kubectl get pods
      - name: Tests in flink-kubernetes-operator
        run: |
          cd flink-kubernetes-operator
          mvn verify -Dit.skip=false
          cd ..
      - name: Tests in flink-kubernetes-webhook
        run: |
          cd flink-kubernetes-webhook
          mvn verify -Dit.skip=false
          cd ..
      - name: Stop the operator
        run: |
          helm uninstall flink-kubernetes-operator
      - name: Stop minikube
        run: |
          source e2e-tests/utils.sh
          stop_minikube
  e2e_ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [ "v1_16","v1_15","v1_14","v1_13" ]
        namespace: [ "default","flink" ]
    name: e2e_ci
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run the tests
        run: |
          source e2e-tests/utils.sh
          bash e2e-tests/run_tests.sh -f ${{ matrix.version }} -n ${{ matrix.namespace }} -m native,standalone -d test_multi_sessionjob.sh test_application_operations.sh test_application_kubernetes_ha.sh test_sessionjob_kubernetes_ha.sh test_sessionjob_operations.sh || exit 1
      - name: Stop minikube
        run: |
          source e2e-tests/utils.sh
          stop_minikube
