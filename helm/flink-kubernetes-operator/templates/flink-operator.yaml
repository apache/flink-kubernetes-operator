################################################################################
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
# limitations under the License.
################################################################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flink-operator.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "flink-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "flink-operator.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: {{ .Chart.Name }}
    spec:
      securityContext:
        runAsUser: 9999
        runAsGroup: 9999
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "flink-operator.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/docker-entrypoint.sh", "operator"]
          {{- if .Values.metrics.port }}
          ports:
            - containerPort: {{ .Values.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}
          env:
            - name: OPERATOR_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: OPERATOR_NAME
              value: {{ include "flink-operator.name" . }}
            - name: FLINK_CONF_DIR
              value: /opt/flink/conf
            - name: FLINK_PLUGINS_DIR
              value: /opt/flink/plugins
            - name: FLINK_OPERATOR_CONF_DIR
              value: /opt/flink-operator/conf
            - name: LOG_CONFIG
              value: -Dlog4j.configurationFile=/opt/flink-operator/conf/log4j2.properties
            - name: FLINK_OPERATOR_WATCH_NAMESPACES
              value: {{ join "," .Values.watchNamespaces  }}
          volumeMounts:
            - name: flink-operator-config-volume
              mountPath: /opt/flink-operator/conf
            - name: flink-default-config-volume
              mountPath: /opt/flink/conf
        {{- if .Values.webhook.create }}
        - name: flink-webhook
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/docker-entrypoint.sh", "webhook"]
          env:
            - name: WEBHOOK_KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.webhook.keystore.useDefaultPassword }}
                  name: flink-operator-webhook-secret
                  key: password
                {{- else }}
                  {{- with .Values.webhook.keystore.passwordSecretRef }}
                    {{- toYaml . | nindent 18 }}
                  {{- end }}
                {{- end }}
            - name: WEBHOOK_KEYSTORE_FILE
              value: "/certs/keystore.p12"
            - name: WEBHOOK_KEYSTORE_TYPE
              value: "pkcs12"
            - name: WEBHOOK_SERVER_PORT
              value: "9443"
            - name: LOG_CONFIG
              value: -Dlog4j.configurationFile=/opt/flink-operator/conf/log4j2.properties
          volumeMounts:
          - name: keystore
            mountPath: "/certs"
            readOnly: true
          - name: flink-operator-config-volume
            mountPath: /opt/flink-operator/conf
        {{- end }}
      volumes:
        - name: flink-operator-config-volume
          configMap:
            name: flink-operator-config
            items:
              - key: flink-conf.yaml
                path: flink-conf.yaml
              - key: log4j2.properties
                path: log4j2.properties
        - name: flink-default-config-volume
          configMap:
            name: flink-default-config
            items:
              - key: flink-conf.yaml
                path: flink-conf.yaml
              - key: log4j-console.properties
                path: log4j-console.properties
        {{- if .Values.webhook.create }}
        - name: keystore
          secret:
            secretName: webhook-server-cert
            items:
            - key: keystore.p12
              path: keystore.p12
        {{- end }}
---
{{- if .Values.operatorConfiguration.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: flink-operator-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
data:
  flink-conf.yaml: |+
{{- if .Values.operatorConfiguration.append }}
  {{- $.Files.Get "conf/flink-operator-config/flink-conf.yaml"  | nindent 4 -}}
{{- end }}
{{- if index (.Values.operatorConfiguration) "flink-conf.yaml" }}
  {{- index (.Values.operatorConfiguration) "flink-conf.yaml" | nindent 4 -}}
{{- end }}
  log4j2.properties: |+
{{- if .Values.operatorConfiguration.append }}
  {{- $.Files.Get "conf/flink-operator-config/log4j2.properties"  | nindent 4 -}}
{{- end }}
{{- if index (.Values.operatorConfiguration) "log4j2.properties" }}
  {{- index (.Values.operatorConfiguration) "log4j2.properties" | nindent 4 -}}
{{- end }}
{{- end }}
---
{{- if .Values.flinkDefaultConfiguration.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: flink-default-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "flink-operator.labels" . | nindent 4 }}
data:
  flink-conf.yaml: |+
{{- if .Values.flinkDefaultConfiguration.append }}
  {{- $.Files.Get "conf/flink-default-config/flink-conf.yaml"  | nindent 4 -}}
{{- end }}
{{- if index (.Values.flinkDefaultConfiguration) "flink-conf.yaml" }}
  {{- index (.Values.flinkDefaultConfiguration) "flink-conf.yaml" | nindent 4 -}}
{{- end }}
  log4j-console.properties: |+
{{- if .Values.flinkDefaultConfiguration.append }}
  {{- $.Files.Get "conf/flink-default-config/log4j-console.properties"  | nindent 4 -}}
{{- end }}
{{- if index (.Values.flinkDefaultConfiguration) "log4j-console.properties" }}
  {{- index (.Values.flinkDefaultConfiguration) "log4j-console.properties" | nindent 4 -}}
{{- end }}
{{- end }}
